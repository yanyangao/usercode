[CRAB]



jobtype = cmssw

scheduler = glite

#scheduler = caf

#server_mode = 1

#server_name = YOUR SERVER_NAME or COMMENT THE LINE !!!!!!!



[CMSSW]



### The data you want to access (to be found on DBS) 

datasetpath=/Zee/Summer09-MC_31X_V3-v1/GEN-SIM-RECO 
#dbs_url=https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_01_writer/servlet/DBSServlet


### The ParameterSet you want to use

pset=zee_trackana_cfg.py

### Splitting parameters

total_number_of_events=100

events_per_job = 100

number_of_jobs = 1





### The output files (comma separated list)

output_file = zee_trackana.root

[USER]

### OUTPUT files Management

##  output back ito UI 

return_data = 1

### If return_data = 1 ###

## UI directory where to store the stderr, stdout and .BrokerInfo of submitted jobs

## FULL path is mandatory. If none <ui_working_dir>/res will be used.

logdir=work/crabdir/log

# UI directory where to store the CMS executable output

## FULL path is mandatory. If none <ui_working_dir>/res will be used.

outputdir=work/crabdir/output





### OUTPUT files INTO A SE

copy_data = 0

storage_element=T3_FR_IPNL

#storage_pool=None

#storage_path=/srm/managerv2?SFN=/castor/cern.ch

publish_data=0

publish_data_name = TKCosmicsBOFF_RecoAlCa

dbs_url_for_publication = https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_02_writer/servlet/DBSServlet

				



[GRID]



## RB/WMS management:

#rb = CNAF



##  Black and White Lists management:

## By Storage

#se_black_list = 

se_white_list = cmssrm.fnal.gov



## By ComputingElement 

#ce_black_list = ufl

ce_white_list = cmssrm.fnal.gov



[CONDORG]



# Set this to condor to override the batchsystem defined in gridcat.

#batchsystem = condor



# Specify addition condor_g requirments

# use this requirment to run on a cms dedicated hardare

# globus_rsl = (condor_submit=(requirements 'ClusterName == \"CMS\" && (Arch == \"INTEL\" || Arch == \"X86_64\")'))

# use this requirement to run on the new hardware

#globus_rsl = (condor_submit=(requirements 'regexp(\"cms-*\",Machine)'))



